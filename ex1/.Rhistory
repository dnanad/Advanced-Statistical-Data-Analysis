setwd("D:/Gottingen/1MSC/WiSe2019-20/Practical_Stochastic_lab_course_II/1solution_StochLab2/ex1")
library("tidyverse")
library("haven")
library("maptools")
library("raster")
library("rgdal")
library("gridExtra")
#(a)
childrendata <- read_dta("childrenfinal.dta") #method suitable for STATA data
#remove all variables that start with "s", "v" and "m", followed by a number
childrendata_1<- childrendata %>%
dplyr::select(-matches("^[svm][0-9]"))
#convert labelled double into double variables
childrendata_2<- childrendata_1 %>%
mutate_if(is.double, as.double)
#(b)
# Make a smaller tibble that contains variables hypage, ruralfacto, female, zstunt, zweight, zwast, adm2.
childrendata_3<- childrendata_2 %>%
dplyr::select(c(hypage, ruralfacto, female, zstunt, zweight, zwast, adm2))
#Make a scatter plot of zstunt against hypage.Add a smooth line to the plot.
g1 <- ggplot(childrendata_3, aes(x = hypage, y = zstunt)) +
geom_point(alpha=0.2) +
geom_smooth(se = T, color = "blue") +
geom_hline(yintercept=-2, linetype='twodash', color='red', size=1.3) +
labs(x = "Age", y = "Z-score")
g1
#Make smooth plots of zstunt against hypage for females and males on one plot, add a suitable legend.
g2 <- ggplot(childrendata_3, aes(x = hypage, y = zstunt,  col = factor(female))) +
geom_point(alpha = 0.3) +
geom_smooth(se = F) +
scale_colour_manual(name='gender',labels = c("male", "female"), values = c("orange", "blue")) +
theme(legend.key = element_rect(fill = "white", colour = "black"))+
geom_hline(yintercept=-2, linetype='twodash', color='red', size=1.3) +
labs(x = "Age", y = "Z-score")
#g2
#plot zstunt against age for urban and rural children
g3 <- ggplot(childrendata_3, aes(x = hypage, y = zstunt,  colour = factor(ruralfacto))) +
geom_point(alpha = 0.4) +
geom_smooth(se = F) +
scale_colour_manual(name='area',labels = c("urban", "rural"), values = c("blue", "deeppink")) +
theme(legend.key = element_rect(fill = "white", colour = "black")) +
geom_hline(yintercept=-2, linetype='twodash', color='red4', size=1.3) +
labs(x = "Age", y = "Z-score")
#g3
grid.arrange(g2, g3, nrow=2, heights=c(9,12))
ggsave('scatter2.png')
##(c) most of the following commands are taken from https://rpubs.com/spoonerf/countrymapggplot2
#Kenya shapefile data
Kenya<-getData("GADM", country="KE", level=1)
plot(Kenya)#basic map
# setting an appropriate projection
Kenya_UTM<-spTransform(Kenya, CRS("+init=epsg:32537"))
#the names of the regions
Kenya_UTM@data$NAME_1
#childrendata_3[7]
#sort the data in alphabetic order with respect to the column
childrendata_3<- childrendata_3[order(childrendata_3$adm2),]
Kenya_UTM@data<- Kenya_UTM@data[order(Kenya_UTM@data$NAME_1),]
#summarising childrendata_3 data according to the counties
childrendata_4 <- childrendata_3 %>% group_by(adm2) %>%
summarise(Mzstunt = mean(zstunt,na.rm=TRUE), n = n())
#adding the missing county Isiolo
childrendata_4[nrow(childrendata_4) + 1,] <- NaN
childrendata_4$adm2[47] <- "ISIOLO"
#again reordering
childrendata_4<- childrendata_4[order(childrendata_4$adm2),]
#dataframe for ggplot
Kenya_UTM@data$id <- rownames(Kenya_UTM@data)
Kenya_UTM@data <- mutate(Kenya_UTM@data, Mzstunt= childrendata_4$Mzstunt)
Kenya_df <- fortify(Kenya_UTM)
Kenya_df <- full_join(Kenya_df,Kenya_UTM@data, by="id")
# we try to draw the map with colors according to zscore
#we want most of these to be blank
theme_opts<-list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_blank()))
ggplot() +
geom_polygon(data = Kenya_df, aes(x = long, y = lat, group = group, fill =
Mzstunt), color = "black", size = 0.25) +
theme(aspect.ratio = 1)+
scale_fill_gradient(name='mean Z-stunt', high='white', low='darkred', na.value='grey50')+
theme_opts
#now we add names of the counties
# taken from http://prabhasp.com/wp/how-to-make-choropleths-in-r/
distcenters <- Kenya_df %>% group_by(NAME_1)%>% summarise(clat = (max(lat)+min(lat))/2, clong = (max(long)+min(long))/2)
distcenters$Mzstunt <- childrendata_4$Mzstunt
#generating the map with names
ggplot(data = Kenya_df, aes(x = long, y = lat, group = group, fill = Mzstunt)) +
geom_polygon(color = "black", size = 0.25) +
geom_text(data = distcenters, aes(x = clong, y = clat, label = NAME_1, group = NULL), size = 3) +
scale_fill_gradient(name='mean Z-stunt', high='white', low='darkred', na.value='grey60')+
#scale_fill_gradient2(name='mean Z-stunt',limits = c(-20,60), low = "red", mid = "white", midpoint = 0, high = "blue") +
#scale_fill_distiller(name='mean Z-stunt', palette = "Spectral") +
theme_opts +
theme(aspect.ratio = 1)
ggsave('Kenya.png')
##(d)write the tibble from (b) into a text file
write.table(childrendata_3,"childrendata_ex5.txt")
